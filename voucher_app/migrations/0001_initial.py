# Generated by Django 2.2.15 on 2020-10-20 19:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('user_app', '0001_initial'),
        ('shop_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Integral_commodity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity_name', models.CharField(help_text='Please enter the name of the product', max_length=50, verbose_name='商品名称')),
                ('integral_price', models.PositiveIntegerField(verbose_name='积分值')),
                ('surplus', models.PositiveIntegerField(help_text='Quantity of merchandise exchanged', verbose_name='商品剩余量')),
            ],
            options={
                'verbose_name': '积分商品表',
                'verbose_name_plural': '积分商品表',
                'db_table': 'Integral_commodity',
            },
            managers=[
                ('integral_commodity_', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_title', models.CharField(help_text='需指明礼卷所属活动', max_length=20, verbose_name='礼卷标题')),
                ('is_check', models.BooleanField(default=False, help_text='该优惠卷是否被管理员审核？', verbose_name='是否审核')),
                ('commit_time', models.DateTimeField(auto_now=True, help_text='优惠卷申请提交的日期', verbose_name='提交日期')),
                ('audit_time', models.DateTimeField(auto_now_add=True, help_text='管理员审核完毕日期', verbose_name='审核日期')),
                ('is_grant', models.BooleanField(default=False, help_text='是否发放优惠卷？', verbose_name='是否发放优惠卷')),
                ('is_limit_counts', models.BooleanField(default=False, help_text='是否对优惠卷数量有限制？', verbose_name='是否限制优惠卷数量')),
                ('counts', models.PositiveIntegerField(default=0, help_text='优惠卷数量', verbose_name='优惠卷数量')),
                ('is_efficient', models.BooleanField(default=False)),
                ('price', models.PositiveIntegerField(default=1)),
                ('start_date', models.DateTimeField(auto_now=True)),
                ('end_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '礼卷',
                'verbose_name_plural': '礼卷',
                'db_table': 'Voucher',
                'ordering': ('-commit_time',),
            },
            managers=[
                ('voucher_', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='VoucherCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text='创建新的礼卷类型', max_length=15, verbose_name='礼卷种类')),
                ('is_check', models.BooleanField(default=True, help_text='礼卷类型是否审核？', verbose_name='是否审核')),
            ],
            options={
                'verbose_name': '礼卷类别',
                'verbose_name_plural': '礼卷类别',
                'db_table': 'BonusCategory',
                'ordering': ('category',),
            },
        ),
        migrations.CreateModel(
            name='VoucherConsumer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acquire_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=True, related_name='voucher_consumer', to=settings.AUTH_USER_MODEL, verbose_name='当前消费者')),
                ('voucher', models.OneToOneField(on_delete=True, related_name='voucher_consumer', to='voucher_app.Voucher', verbose_name='礼卷')),
            ],
            options={
                'verbose_name': '用户优惠卷',
                'verbose_name_plural': '用户优惠卷',
                'db_table': 'VoucherConsumer',
                'ordering': ('-acquire_time',),
                'default_manager_name': 'voucher_',
            },
            managers=[
                ('voucher_', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='voucher',
            name='category',
            field=models.OneToOneField(help_text='选择礼卷的类型', on_delete=True, to='voucher_app.VoucherCategory', verbose_name='礼卷类型'),
        ),
        migrations.AddField(
            model_name='voucher',
            name='commodity',
            field=models.ForeignKey(help_text='将优惠卷发放到指定的商品下', null=True, on_delete=True, related_name='voucher', to='shop_app.Commodity'),
        ),
        migrations.AddField(
            model_name='voucher',
            name='store',
            field=models.ForeignKey(help_text='将礼卷发放到指定的商铺下', null=True, on_delete=True, related_name='voucher', to='user_app.Store'),
        ),
        migrations.AddField(
            model_name='voucher',
            name='user',
            field=models.ForeignKey(on_delete=True, related_name='voucher', to=settings.AUTH_USER_MODEL, verbose_name='当前商家'),
        ),
        migrations.CreateModel(
            name='Integrals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fraction', models.PositiveIntegerField(default=0, verbose_name='积分')),
                ('category', models.CharField(max_length=10, verbose_name='商品种类')),
                ('consumer_time', models.DateTimeField(auto_now_add=True, verbose_name='消费时间')),
                ('commodity', models.ForeignKey(on_delete=False, related_name='integral', to='shop_app.Commodity', verbose_name='购买的商品')),
                ('user', models.OneToOneField(on_delete=True, related_name='integral', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '积分表',
                'verbose_name_plural': '积分表',
                'db_table': 'Integral',
            },
            managers=[
                ('integral_', django.db.models.manager.Manager()),
            ],
        ),
    ]
